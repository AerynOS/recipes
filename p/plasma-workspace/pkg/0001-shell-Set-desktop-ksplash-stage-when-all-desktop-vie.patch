From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Vlad Zahorodnii <vlad.zahorodnii@kde.org>
Date: Wed, 25 Jun 2025 14:00:05 +0300
Subject: [PATCH] shell: Set desktop ksplash stage when all desktop views are
 ready

If there are two outputs and the wallpaper for the first one is ready
but for the second one is not, the ksplash will be notified about the
desktop stage.

This changes fixes checkAllDesktopsUiReady() so it sets the desktop
stage only if all desktop views are ready.
---
 shell/shellcorona.cpp | 28 +++++++++++++++-------------
 shell/shellcorona.h   |  2 +-
 2 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/shell/shellcorona.cpp b/shell/shellcorona.cpp
index 37d93d0535..65c8ccc272 100644
--- a/shell/shellcorona.cpp
+++ b/shell/shellcorona.cpp
@@ -1338,6 +1338,8 @@ void ShellCorona::removeDesktop(DesktopView *desktopView)
 
     desktopView->destroy();
     desktopView->containment()->reactToScreenChange();
+
+    checkAllDesktopsUiReady();
 }
 
 PanelView *ShellCorona::panelView(Plasma::Containment *containment) const
@@ -1529,22 +1531,22 @@ void ShellCorona::addOutput(QScreen *screen)
 #endif
 }
 
-void ShellCorona::checkAllDesktopsUiReady(bool ready)
+void ShellCorona::checkAllDesktopsUiReady()
 {
-    if (!ready)
+    const bool ready = std::ranges::all_of(std::as_const(m_desktopViewForScreen), [](const DesktopView *view) {
+        return view->containment()->isUiReady();
+    });
+    if (!ready) {
         return;
-    for (auto v : std::as_const(m_desktopViewForScreen)) {
-        if (!v->containment()->isUiReady())
-            return;
-
-        qCDebug(PLASMASHELL) << "Plasma Shell startup completed";
-        QDBusMessage ksplashProgressMessage = QDBusMessage::createMethodCall(QStringLiteral("org.kde.KSplash"),
-                                                                             QStringLiteral("/KSplash"),
-                                                                             QStringLiteral("org.kde.KSplash"),
-                                                                             QStringLiteral("setStage"));
-        ksplashProgressMessage.setArguments(QList<QVariant>() << QStringLiteral("desktop"));
-        QDBusConnection::sessionBus().asyncCall(ksplashProgressMessage);
     }
+
+    qCDebug(PLASMASHELL) << "Plasma Shell startup completed";
+    QDBusMessage ksplashProgressMessage = QDBusMessage::createMethodCall(QStringLiteral("org.kde.KSplash"),
+                                                                            QStringLiteral("/KSplash"),
+                                                                            QStringLiteral("org.kde.KSplash"),
+                                                                            QStringLiteral("setStage"));
+    ksplashProgressMessage.setArguments(QList<QVariant>() << QStringLiteral("desktop"));
+    QDBusConnection::sessionBus().asyncCall(ksplashProgressMessage);
 }
 
 Plasma::Containment *ShellCorona::createContainmentForActivity(const QString &activity, int screenNum)
diff --git a/shell/shellcorona.h b/shell/shellcorona.h
index 0f544ca266..7b6c6a559a 100644
--- a/shell/shellcorona.h
+++ b/shell/shellcorona.h
@@ -275,7 +275,7 @@ private:
     DesktopView *desktopForScreen(QScreen *screen) const;
     void setupWaylandIntegration();
     void executeSetupPlasmoidScript(Plasma::Containment *containment, Plasma::Applet *applet);
-    void checkAllDesktopsUiReady(bool ready);
+    void checkAllDesktopsUiReady();
     void activateLauncherMenu(const QString &screenName);
     void handleColorRequestedFromDBus(const QDBusMessage &msg);
 
