name        : libcxx
version     : 19.1.6
release     : 11
summary     : Modern C++ standard library
license     :
    - Apache-2.0 WITH LLVM-exception
    - NCSA
homepage    : https://www.llvm.org
description : |
    A modern C++ standard library from the LLVM project, aiming for minimal overhead
    and compilation times. Targets the C++11 standard.
    This is the default C++ library in Serpent OS used in conjunction with the LLVM
    toolchain.
upstreams   :
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.6/llvm-project-19.1.6.src.tar.xz: e3f79317adaa9196d2cfffe1c869d7c100b7540832bc44fe0d3f44a12861fa34
builddeps   :
    - binary(python3)
    - pkgconfig(libxcrypt)
    - pkgconfig32(libxcrypt)
    - gcc-32bit-devel
    - libcxx-32bit-devel
emul32      : yes
tuning      :
    - lto: full
setup       : |
    # Context on CMAKE_ vars: https://reviews.llvm.org/D112155#3353869
    %cmake -S runtimes \
        -DCMAKE_ASM_COMPILER_TARGET=%(build_platform) \
        -DCMAKE_CXX_COMPILER_TARGET=%(build_platform) \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLIBCXX_ENABLE_ASSERTIONS=OFF \
        -DLIBCXX_ENABLE_SHARED=ON \
        -DLIBCXX_ENABLE_STATIC=OFF \
        -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
        -DLIBCXX_HAS_ATOMIC_LIB=ON \
        -DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
        -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
        -DLIBCXX_USE_COMPILER_RT=ON \
        -DLIBCXXABI_ENABLE_SHARED=OFF \
        -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
        -DLIBCXXABI_USE_COMPILER_RT=ON \
        -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
        -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=OFF \
        -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=OFF \
        -DLIBUNWIND_INSTALL_HEADERS=ON \
        -DLIBUNWIND_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_ENABLE_SHARED=ON \
        -DLIBUNWIND_ENABLE_STATIC=ON \
        -DLIBUNWIND_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_LIBDIR_SUFFIX=%(libsuffix) \
        -DLIBUNWIND_USE_COMPILER_RT=ON \
        -DLLVM_DEFAULT_TARGET_TRIPLE=%(build_platform) \
        -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \
        -DLLVM_ENABLE_RUNTIMES='libcxx;libcxxabi;libunwind' \
        -DLLVM_INCLUDE_TESTS=ON \
        -DLLVM_LIBDIR_SUFFIX=%(libsuffix) \
        -DLLVM_LIBGCC_EXPLICIT_OPT_IN=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DLLVM_TARGETS_TO_BUILD="host;AMDGPU;BPF" \
        -DLLVM_USE_SANITIZER=OFF \
        $cmake_extra_args
build       : |
    %cmake_build cxx cxxabi unwind
install     : |
    %cmake_install

    # Set some support symlinks
    echo "INPUT(libc++.so.1)" > "%(installroot)/%(libdir)/libc++abi.so"
    ln -svf libc++.so.1 "%(installroot)/%(libdir)/libc++abi.so.1"

    # Origin: https://raw.githubusercontent.com/kraj/meta-clang/master/recipes-devtools/clang/clang/libunwind.pc.in
    %install_dir %(installroot)%(libdir)/pkgconfig
    sed -e 's@\@LIBDIR\@@%(libdir)@g' -e 's/@VERSION@/%(version)/g' %(pkgdir)/libunwind.pc.in > %(installroot)%(libdir)/pkgconfig/libunwind.pc
workload    : |
    %cmake_build check-runtimes -k 1000 ||:
packages    :
    - "%(name)-devel":
        paths:
            - /usr/lib/libc++*.json
            - /usr/share/libc++

    - "%(name)-32bit-devel":
        paths:
            - /usr/lib32/libc++*.json
