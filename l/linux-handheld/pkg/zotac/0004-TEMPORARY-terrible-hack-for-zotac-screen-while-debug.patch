From 8dd89877fdf7b48576445a4e0ccbaed7e2b3f60b Mon Sep 17 00:00:00 2001
From: Luke Jones <luke@ljones.dev>
Date: Sun, 27 Apr 2025 09:15:16 +0000
Subject: [PATCH 4/6] TEMPORARY: terrible hack for zotac screen while debugging

---
 .../link/protocols/link_edp_panel_control.c   | 28 +++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/dc/link/protocols/link_edp_panel_control.c b/drivers/gpu/drm/amd/display/dc/link/protocols/link_edp_panel_control.c
index e0e3bb865359..b1b7b828b292 100644
--- a/drivers/gpu/drm/amd/display/dc/link/protocols/link_edp_panel_control.c
+++ b/drivers/gpu/drm/amd/display/dc/link/protocols/link_edp_panel_control.c
@@ -28,6 +28,8 @@
  * as PSR and ABM and it also manages specs defined eDP panel power sequences.
  */
 
+ #include <linux/dmi.h>
+
 #include "link_edp_panel_control.h"
 #include "link_dpcd.h"
 #include "link_dp_capability.h"
@@ -152,6 +154,16 @@ enum dp_panel_mode dp_get_panel_mode(struct dc_link *link)
 	return DP_PANEL_MODE_DEFAULT;
 }
 
+static const struct dmi_system_id hack_backlight_quirks[] = {
+	{
+		.matches = {
+			DMI_MATCH(DMI_PRODUCT_NAME, "ZOTAC GAMING ZONE"),
+		},
+		.driver_data = NULL,
+	},
+	{ }
+};
+
 bool edp_set_backlight_level_nits(struct dc_link *link,
 		bool isHDR,
 		uint32_t backlight_millinits,
@@ -189,17 +201,29 @@ bool edp_set_backlight_level_nits(struct dc_link *link,
 			return false;
 	} else if (link->backlight_control_type == BACKLIGHT_CONTROL_AMD_AUX) {
 		struct dpcd_source_backlight_set dpcd_backlight_set;
+		uint8_t bl_bytes[sizeof(struct dpcd_source_backlight_set)];
 		*(uint32_t *)&dpcd_backlight_set.backlight_level_millinits = backlight_millinits;
 		*(uint16_t *)&dpcd_backlight_set.backlight_transition_time_ms = (uint16_t)transition_time_in_ms;
 
+		memcpy(bl_bytes, &dpcd_backlight_set, sizeof(bl_bytes));
+
 		uint8_t backlight_control = isHDR ? 1 : 0;
 		// OLEDs have no PWM, they can only use AUX
 		if (link->dpcd_sink_ext_caps.bits.oled == 1)
 			backlight_control = 1;
 
+		if (dmi_check_system(hack_backlight_quirks)) {
+			if (backlight_millinits < 5000) {
+				*(uint32_t *)&dpcd_backlight_set.backlight_level_millinits = 5000;
+				memcpy(bl_bytes, &dpcd_backlight_set, sizeof(bl_bytes));
+			}
+
+			if (!bl_bytes[0])
+				bl_bytes[0] = 0xF;
+		}
+
 		if (core_link_write_dpcd(link, DP_SOURCE_BACKLIGHT_LEVEL,
-			(uint8_t *)(&dpcd_backlight_set),
-			sizeof(dpcd_backlight_set)) != DC_OK)
+			bl_bytes, sizeof(bl_bytes)) != DC_OK)
 			return false;
 
 		if (core_link_write_dpcd(link, DP_SOURCE_BACKLIGHT_CONTROL,
-- 
2.49.0

