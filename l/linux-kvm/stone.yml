name        : linux-kvm
version     : 6.7.2
release     : 54
homepage    : https://kernel.org/
upstreams   :
    - https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.7.2.tar.xz : c34de41baa29c475c0834e88a3171e255ff86cd32d83c6bffc2b797e60bfa671
summary     : Linux Kernel - KVM Guest build
description : |
    Minimalist kernel configuration supporting KVM host and not much else
license     :
    - GPL-2.0-only
builddeps   :
    - binary(bc)
    - binary(bison)
    - binary(dracut)
    - binary(flex)
    - binary(gzip)
    - binary(kmod)
    - binary(less)
    - binary(m4)
    - binary(perl)
    - binary(python3)
    - binary(which)
    - pkgconfig(gmp)
    - pkgconfig(libelf)
    - pkgconfig(libssl)
    - pkgconfig(libzstd)
    - pkgconfig(mpfr)
    - binary(grep)
    - gcc # libgcc_s.so.1 - needed until we get llvm-libgcc
setup       : |
    extraVersion="-%(release).kvm"
    sed -e "s/EXTRAVERSION =.*/EXTRAVERSION = $extraVersion/" -i Makefile

    %install_file %(pkgdir)/config-x86_64 .config
    %patch %(pkgdir)/more-uarches-for-kernel-5.17+.patch

    %patch %(pkgdir)/mouse-patches/1.patch
    %patch %(pkgdir)/mouse-patches/2.patch
    %patch %(pkgdir)/mouse-patches/3.patch
    %patch %(pkgdir)/mouse-patches/4.patch
    %patch %(pkgdir)/mouse-patches/5.patch
    %patch %(pkgdir)/mouse-patches/6.patch
    %patch %(pkgdir)/mouse-patches/7.patch
    %patch %(pkgdir)/mouse-patches/8.patch

    %make CC=clang ARCH=x86_64 LLVM=1 WERROR=0 oldconfig || exit 1
build       : |
    # Do NOT use CONFIG_DEBUG_SECTION_MISMATCH as it is GCC specific
    %make VERBOSE=0 V=0 CC=clang ARCH=x86_64 LLVM=1 WERROR=0
    %make -C tools/objtool VERBOSE=0 V=0 CC=clang ARCH=x86_64 LLVM=1 WERROR=0
install     : |
    kernelVersion="%(version)-%(release).kvm"
    kernelID="com.serpentos.kvm"
    %install_exe arch/x86/boot/bzImage %(installroot)%(libdir)/kernel/$kernelID.%(version)-%(release)

    %install_file .config %(installroot)%(libdir)/kernel/config-$kernelVersion
    %install_file System.map %(installroot)%(libdir)/kernel/System.map-$kernelVersion

    # Modules please
    %install_dir %(installroot)%(libdir)/modules/$kernelVersion
    %make CC=clang ARCH=x86_64 LLVM=1 WERROR=0 INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH=%(installroot)/usr modules_install KERNELRELEASE="$kernelVersion" mod-fw= DEPMOD=/usr/bin/true
    /usr/sbin/depmod -b %(installroot)/usr ${kernelVersion} -a
    
    # TODO: Include early microcode
    LD_PRELOAD='' dracut --strip --tmpdir /tmp -N -f \
        --kmoddir %(installroot)%(libdir)/modules/${kernelVersion} --kver $kernelVersion --add "dash bash systemd virtiofs" \
        --strip --hardlink --nomdadmconf --nolvmconf --add-drivers "qxl virtio-gpu" --zstd \
        %(installroot)%(libdir)/kernel/initrd-$kernelID.%(version)-%(release)

    # No building against this kernel pls.
    rm -rf %(installroot)%(libdir)/modules/${kernelVersion}/build
    rm -rf %(installroot)%(libdir)/modules/${kernelVersion}/source

    # Temporary: Help with VMs
    ln -s initrd-$kernelID.%(version)-%(release) %(installroot)%(libdir)/kernel/current.initrd
    ln -s $kernelID.%(version)-%(release) %(installroot)%(libdir)/kernel/current.kernel
