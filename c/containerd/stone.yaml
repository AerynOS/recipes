#
# SPDX-FileCopyrightText: © 2020-2024 Serpent OS Developers
# SPDX-FileCopyRightText: © 2025- AerynOS Developers
#
# SPDX-License-Identifier: MPL-2.0
#
name        : containerd
version     : 2.1.1
release     : 9
homepage    : https://containerd.io/
upstreams   :
    - https://github.com/containerd/containerd/archive/refs/tags/v2.1.1.tar.gz : 6ac779e87926ac1fe4360ffee63efd9f829b15a887e612be9a7d2f8a652674e9
summary     : An open and reliable container runtime
description : |
    An open and reliable container runtime
license     :
    - Apache-2.0
networking  : yes
builddeps   :
    - binary(go)
    - binary(go-md2man)
    - binary(sed)
    - pkgconfig(libbtrfsutil)
rundeps     :
    - binary(runc)
environment : |
    # Allows the go modules to be downloaded with mod vendor and properly reused later
    export GOMODCACHE="${PWD}/.gocache"
setup       : |
    sed -i 's|/usr/local/bin/containerd|/usr/bin/containerd|' containerd.service

    go mod vendor
build       : |
    export GO111MODULE=auto
    export GOFLAGS="-trimpath -mod=readonly -modcacherw"
    export CGO_CFLAGS="${CGO_CFLAGS}"

    # Git commit corresponding to the version tag
    GITCOMMIT=$(git ls-remote https://github.com/containerd/containerd.git refs/tags/v%(version)^{} |awk '{print $1}')

    %make \
       GOPATH=${PWD}/src/github.com/containerd \
       GO_BUILD_FLAGS="${GOFLAGS}" \
       VERSION=%(version) \
       REVISION=${GITCOMMIT} \
       binaries man
install     : |
    %make_install PREFIX=/usr/

    # systemd
    %install_file containerd.service -t %(installroot)%(libdir)/systemd/system
    %install_file %(pkgdir)/containerd.preset -t %(installroot)/%(libdir)/systemd/system-preset

    # Completions
    %install_file contrib/autocomplete/ctr %(installroot)/%(completionsdir)/ctr
    %install_file contrib/autocomplete/zsh_autocomplete %(installroot)/%(datadir)/zsh/site-functions/_ctr

    # Man pages
    %install_file man/*.8 -t %(installroot)%(mandir)/man8
    %install_file man/*.5 -t %(installroot)%(mandir)/man5
# check       : |
#     # Needs true root
#     GOFLAGS="-trimpath" make test || true
tune        :
    - lto
    - optimize: speed
