#
# SPDX-FileCopyrightText: Â© 2020-2024 Serpent OS Developers
#
# SPDX-License-Identifier: MPL-2.0
#
name        : golang
version     : 1.24.3
release     : 16
homepage    : https://go.dev
upstreams   :
    - https://go.dev/dl/go1.24.3.linux-amd64.tar.gz : 3333f6ea53afa971e9078895eaa4ac7204a8c6b5c68c10e6bc9a33e8e391bdd8
summary     : The Go programming language
description : |
    Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.
license     : BSD-3-Clause
builddeps   :
    #- binary(ar) # checkdep
    - binary(bash)
    - binary(go)
rundeps     :
    - binary(ld.so) # Basically needs glibc for the internal linker implementation
environment : |
    # This can mess up the automatic goroot detection if set. Explicitly unset it just in case it has made it's way into the buildenv
    unset GOROOT

    # Final goroot
    _goroot="%(libdir)/%(name)"

    # needed for bootstrap in the build phase
    export GOROOT_BOOTSTRAP="${_goroot}"

    # Set the CPU baseline to v2, which corresponds to x86_64v2
    # Note, this is also propagated into the default build config for the distribution. ALL linux AMD64 binaries built with this golang distribution will default to v2
    export GOAMD64=v2
setup       : |
    %patch %(pkgdir)/stateless/x509-certificate-path.patch
    %patch %(pkgdir)/0001-downstream-Default-to-clang-linker.patch
    %patch %(pkgdir)/go.env-toolchain-local.patch
build       : |
    cd src && ./make.bash -v
install     : |
    %install_dir %(installroot)/${_goroot} %(installroot)/%(bindir)
    cp -apv api bin doc lib pkg src misc test go.env VERSION %(installroot)/${_goroot}

    # Fix group/all permissions
    chmod -Rc g+rX,o+rX %(installroot)/${_goroot}/

    # gdbinit file
    %install_file %(pkgdir)/golang-gdbinit %(installroot)/usr/share/gdb/system-gdbinit/golang.gdb

    # Symlinks are required so that golang can resolve the goroot at runtime
    ln -srv %(installroot)/${_goroot}/bin/gofmt %(installroot)/%(bindir)/gofmt
    ln -srv %(installroot)/${_goroot}/bin/go %(installroot)/%(bindir)/go

    # Useless
    rm -v %(installroot)/${_goroot}/src/go/doc/Makefile

    # This is just data fed into tests, but boulder scans it regardless.
    find %(installroot)/${_libdir} -type d -name testdata -exec rm -rfv {} +

# some tests just fail (some need networking)
# TODO go through and fix them
# check      : |
#     cd src && ./run.bash -v -v -v -k
