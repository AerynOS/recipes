From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Mon, 26 May 2025 21:31:32 -0500
Subject: [PATCH] Revert "Add `--compression-level` option to `build` command
 (#2572)"

This reverts commit 91707e94689446f86a911d83cc84606fa9ecac5e.

This breaks the python-cryptography build.
---
 src/build_context.rs |  7 -------
 src/build_options.rs |  6 ------
 src/develop.rs       |  1 -
 src/module_writer.rs | 13 ++-----------
 4 files changed, 2 insertions(+), 25 deletions(-)

diff --git a/src/build_context.rs b/src/build_context.rs
index 71fc9efe..eb204cb7 100644
--- a/src/build_context.rs
+++ b/src/build_context.rs
@@ -132,8 +132,6 @@ pub struct BuildContext {
     pub editable: bool,
     /// Cargo build options
     pub cargo_options: CargoOptions,
-    /// Zip compression level
-    pub compression_level: u16,
 }
 
 /// The wheel file location and its Python version tag (e.g. `py3`).
@@ -671,7 +669,6 @@ impl BuildContext {
             &self.metadata24,
             &[tag.clone()],
             self.excludes(Format::Wheel)?,
-            self.compression_level,
         )?;
         self.add_external_libs(&mut writer, &[&artifact], &[ext_libs])?;
 
@@ -749,7 +746,6 @@ impl BuildContext {
             &self.metadata24,
             &[tag.clone()],
             self.excludes(Format::Wheel)?,
-            self.compression_level,
         )?;
         self.add_external_libs(&mut writer, &[&artifact], &[ext_libs])?;
 
@@ -872,7 +868,6 @@ impl BuildContext {
             &self.metadata24,
             &tags,
             self.excludes(Format::Wheel)?,
-            self.compression_level,
         )?;
         self.add_external_libs(&mut writer, &[&artifact], &[ext_libs])?;
 
@@ -944,7 +939,6 @@ impl BuildContext {
             &self.metadata24,
             &tags,
             self.excludes(Format::Wheel)?,
-            self.compression_level,
         )?;
         self.add_external_libs(&mut writer, &[&artifact], &[ext_libs])?;
 
@@ -1043,7 +1037,6 @@ impl BuildContext {
             &metadata24,
             &tags,
             self.excludes(Format::Wheel)?,
-            self.compression_level,
         )?;
 
         if self.project_layout.python_module.is_some() && self.target.is_wasi() {
diff --git a/src/build_options.rs b/src/build_options.rs
index 6a56caf4..13954ce1 100644
--- a/src/build_options.rs
+++ b/src/build_options.rs
@@ -216,11 +216,6 @@ pub struct BuildOptions {
     /// Cargo build options
     #[command(flatten)]
     pub cargo: CargoOptions,
-
-    /// Zip compresson level to use
-    #[arg(long, value_parser = clap::value_parser!(u16).range(0..=264), hide = true, default_value="6"
-    )]
-    pub compression_level: u16,
 }
 
 impl Deref for BuildOptions {
@@ -807,7 +802,6 @@ impl BuildContextBuilder {
             universal2,
             editable,
             cargo_options,
-            compression_level: build_options.compression_level,
         })
     }
 }
diff --git a/src/develop.rs b/src/develop.rs
index e68b87b4..b72ca18d 100644
--- a/src/develop.rs
+++ b/src/develop.rs
@@ -416,7 +416,6 @@ pub fn develop(develop_options: DevelopOptions, venv_dir: &Path) -> Result<()> {
             target: target_triple,
             ..cargo_options
         },
-        compression_level: 6,
     };
 
     let build_context = build_options
diff --git a/src/module_writer.rs b/src/module_writer.rs
index 3f343d1c..fbe21093 100644
--- a/src/module_writer.rs
+++ b/src/module_writer.rs
@@ -239,7 +239,6 @@ pub struct WheelWriter {
     wheel_path: PathBuf,
     file_tracker: FileTracker,
     excludes: Override,
-    compression_level: u16,
 }
 
 impl ModuleWriter for WheelWriter {
@@ -269,7 +268,7 @@ impl ModuleWriter for WheelWriter {
 
         // Unlike users which can use the develop subcommand, the tests have to go through
         // packing a zip which pip than has to unpack. This makes this 2-3 times faster
-        let compression_method = if cfg!(feature = "faster-tests") || self.compression_level == 0 {
+        let compression_method = if cfg!(feature = "faster-tests") {
             zip::CompressionMethod::Stored
         } else {
             zip::CompressionMethod::Deflated
@@ -278,9 +277,6 @@ impl ModuleWriter for WheelWriter {
         let mut options = zip::write::SimpleFileOptions::default()
             .unix_permissions(permissions)
             .compression_method(compression_method);
-        if self.compression_level != 0 {
-            options = options.compression_level(Some(self.compression_level as i64));
-        }
         let mtime = self.mtime().ok();
         if let Some(mtime) = mtime {
             options = options.last_modified_time(mtime);
@@ -306,7 +302,6 @@ impl WheelWriter {
         metadata24: &Metadata24,
         tags: &[String],
         excludes: Override,
-        compression_level: u16,
     ) -> Result<WheelWriter> {
         let wheel_path = wheel_dir.join(format!(
             "{}-{}-{}.whl",
@@ -324,7 +319,6 @@ impl WheelWriter {
             wheel_path,
             file_tracker: FileTracker::default(),
             excludes,
-            compression_level,
         };
 
         write_dist_info(&mut builder, metadata24, tags)?;
@@ -383,7 +377,7 @@ impl WheelWriter {
 
     /// Creates the record file and finishes the zip
     pub fn finish(mut self) -> Result<PathBuf, io::Error> {
-        let compression_method = if cfg!(feature = "faster-tests") || self.compression_level == 0 {
+        let compression_method = if cfg!(feature = "faster-tests") {
             zip::CompressionMethod::Stored
         } else {
             zip::CompressionMethod::Deflated
@@ -391,9 +385,6 @@ impl WheelWriter {
 
         let mut options =
             zip::write::SimpleFileOptions::default().compression_method(compression_method);
-        if self.compression_level != 0 {
-            options = options.compression_level(Some(self.compression_level as i64));
-        }
         let mtime = self.mtime().ok();
         if let Some(mtime) = mtime {
             options = options.last_modified_time(mtime);
