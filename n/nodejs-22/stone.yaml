#
# SPDX-FileCopyrightText: Â© 2020-2024 Serpent OS Developers
#
# SPDX-License-Identifier: MPL-2.0
#
name        : nodejs-22
version     : 22.18.0
release     : 3
homepage    : https://nodejs.org/
upstreams   :
    - https://nodejs.org/dist/v22.18.0/node-v22.18.0.tar.gz : 26247ff9a75ac13f6dac7e07dca6172314554dcf20761675c5435f1e84e6c4b2
summary     : A JavaScript runtime environment.
description : |
    Node.js is an open-source, cross-platform JavaScript runtime environment.
license     : MIT
builddeps   :
    - binary(ninja)
    - binary(patchelf)
    - binary(python)
    - pkgconfig(bzip2)
    - pkgconfig(icu-i18n)
    - pkgconfig(libbrotlicommon)
    - pkgconfig(libcares)
    - pkgconfig(libnghttp2)
    - pkgconfig(libuv)
    - pkgconfig(openssl)
    - pkgconfig(sqlite3)
    - pkgconfig(zlib)
    # TODO: nghttp3
environment : |
    NODEJS_MAJOR=22
    NODEJS_SONAME=127
    NODEJS_PRIVATE_SITELIB=%(libdir)/node_modules_$NODEJS_MAJOR
setup       : |
    %patch %(pkgdir)/0001-Don-t-try-to-link-libatomic.patch

    python configure.py \
        --ninja \
        --enable-lto \
        --prefix=%(prefix) \
        --libdir=lib \
        --shared \
        --shared-brotli \
        --shared-cares \
        --shared-libuv \
        --shared-nghttp2 \
        --shared-openssl \
        --shared-sqlite \
        --shared-zlib \
        --with-intl=system-icu
build       : |
    ninja -j %(jobs) -C out/Release
install     : |
    mv -v out/Release/lib/libnode.so.* out/Release/
    ./tools/install.py install --dest-dir %(installroot) --prefix %(prefix)

    mv %(installroot)/%(libdir)/node_modules \
       %(installroot)/$NODEJS_PRIVATE_SITELIB

    # Fix the node permissions and move it
    chmod 0755 %(installroot)/%(bindir)/node
    patchelf --remove-rpath %(installroot)/%(bindir)/node
    mv %(installroot)/%(bindir)/node %(installroot)/%(bindir)/node-$NODEJS_MAJOR


    # Move the corepack binary
    rm -f %(installroot)/%(bindir)/corepack

    # Set the hashbang to use the matching Node.js interpreter
    sed --in-place --regexp-extended \
        "s;^#!/usr/bin/env node($|\ |\t)+;#!/usr/bin/node-$NODEJS_MAJOR;g" \
        %(installroot)/$NODEJS_PRIVATE_SITELIB/corepack/dist/corepack.js

    ln -srf %(installroot)/$NODEJS_PRIVATE_SITELIB/corepack/dist/corepack.js \
            %(installroot)/%(bindir)/corepack-$NODEJS_MAJOR


    # Move the npm binary
    rm -f %(installroot)/%(bindir)/npm

    # Set the hashbang to use the matching Node.js interpreter
    sed --in-place --regexp-extended \
        "s;^#!/usr/bin/env node($|\ |\t)+;#!/usr/bin/node-$NODEJS_MAJOR;g" \
        %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/bin/npm-cli.js

    ln -srf %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/bin/npm-cli.js \
            %(installroot)/%(bindir)/npm-$NODEJS_MAJOR


    # Move the npx binary
    rm -f %(installroot)/%(bindir)/npx

    # Set the hashbang to use the matching Node.js interpreter
    sed --in-place --regexp-extended \
        "s;^#!/usr/bin/env node($|\ |\t)+;#!/usr/bin/node-$NODEJS_MAJOR;g" \
        %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/bin/npx-cli.js

    ln -srf %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/bin/npx-cli.js \
            %(installroot)/%(bindir)/npx-$NODEJS_MAJOR


    # We don't need docs
    rm -rfv %(installroot)/usr/share/doc

    mv %(installroot)/usr/share/man/man1/node.1 %(installroot)/usr/share/man/man1/node-$NODEJS_MAJOR.1

    mv %(installroot)/usr/include/node %(installroot)/usr/include/node-$NODEJS_MAJOR

    # Some NPM bundled deps are executable but should not be
    find %(installroot)/$NODEJS_PRIVATE_SITELIB/npm \
        -not -path "%(installroot)/$NODEJS_PRIVATE_SITELIB/npm/bin/*" \
        -executable -type f \
        -exec chmod -x {} \;
    # The above command is a little overzealous. Add a few permissions back.
    chmod +x %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin/node-gyp
    chmod +x %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/node_modules/node-gyp/bin/node-gyp.js

    # Fix node-gyp
    sed --in-place --regexp-extended \
        "s;^#!/usr/bin/env node($|\ |\t)+;#!/usr/bin/node-$NODEJS_MAJOR;g" \
        %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/node_modules/node-gyp/bin/node-gyp.js

    find %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/node_modules \( \
        -name '*.md'     -o \
        -name 'AUTHOR*'  -o \
        -name 'LICENSE*' -o \
        -name 'PULL*'    -o \
        -name Makefile   -o \
        -name appveyor.yml -o \
        -name doc  -o \
        -name docs -o \
        -name examples -o \
        -name 'license*' -o \
        -name '*.bak'  -o \
        -name '*.d.ts' -o \
        -name '*.markdown' -o \
        -name '.*.yml' -o \
        -name .editorconfig -o \
        -name .github -o \
        -name .nycrc \
        \) -exec rm -rfv {} +
    rm -rfv %(installroot)/$NODEJS_PRIVATE_SITELIB/npm/docs

    # Nothing links against this. If that ever becomes necessary we can re-add these with a customized pkgconfig
    rm -rfv %(installroot)/%(includedir)

    # This is a compat directory that is used when the binary name can't be overridden
    # To use it do something like `export PATH=/usr/lib/nodejs-22/bin:$PATH`
    %install_dir %(installroot)/%(libdir)/nodejs-$NODEJS_MAJOR/bin
    for i in node npm npx corepack; do
        ln -srv %(installroot)/%(bindir)/$i-$NODEJS_MAJOR %(installroot)/%(libdir)/nodejs-22/bin/$i
    done
