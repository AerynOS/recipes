From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Tue, 12 Aug 2025 11:07:03 -0500
Subject: [PATCH] Workaround LLVM bug with hardlinked includes

There's an LLVM issue where in certain cases it can get confused when headers share the same inode and make further includes. This affects the kdepim-addons build which uses headers from Prison and kpkpass.

Workaround this by adding the project name to the generated headers as a comment, thus forcing the files to have different hashes and thus be distinct.

https://github.com/llvm/llvm-project/issues/26953
---
 modules/ECMGenerateHeaders.cmake | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/modules/ECMGenerateHeaders.cmake b/modules/ECMGenerateHeaders.cmake
index 1d2a46d4..38b26b47 100644
--- a/modules/ECMGenerateHeaders.cmake
+++ b/modules/ECMGenerateHeaders.cmake
@@ -184,7 +184,7 @@ function(ECM_GENERATE_HEADERS camelcase_forwarding_headers_var)
         foreach(_CLASSNAME ${_classnames})
             set(FANCY_HEADER_FILE "${EGH_OUTPUT_DIR}/${EGH_PREFIX}${_CLASSNAME}")
             if (NOT EXISTS ${FANCY_HEADER_FILE})
-                file(WRITE ${FANCY_HEADER_FILE} "#include \"${originalprefix}${originalbasename}.${EGH_HEADER_EXTENSION}\" // IWYU pragma: export\n")
+                file(WRITE ${FANCY_HEADER_FILE} "// Generated header for ${PROJECT_NAME}\n#include \"${originalprefix}${originalbasename}.${EGH_HEADER_EXTENSION}\" // IWYU pragma: export\n")
             endif()
             list(APPEND ${camelcase_forwarding_headers_var} "${FANCY_HEADER_FILE}")
             if (EGH_PREFIX)
