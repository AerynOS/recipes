From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@serpentos.com>
Date: Sun, 4 Aug 2024 00:04:52 +0000
Subject: [PATCH] {vi,}sudo: Support stateless default paths

On Serpent OS we require packages work out of the box in the absence
of custom configuration, as well as being extensible by local machine
changes.

As such we enforce the `/usr/share/defaults/sudo/sudoers` path for sudo-rs
as we did for `sudo`, while having the drop-in dir, `/etc/sudoers.d`,
used for local changes.

We modify `visudo` to default to the `/etc/sudoers.d/visudo` path for
new customisations.

Signed-off-by: Ikey Doherty <ikey@serpentos.com>
---
 src/sudo/mod.rs   | 3 +++
 src/visudo/mod.rs | 4 ++--
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/sudo/mod.rs b/src/sudo/mod.rs
index 7fbfddf1..4161510a 100644
--- a/src/sudo/mod.rs
+++ b/src/sudo/mod.rs
@@ -55,6 +55,9 @@ pub(crate) fn candidate_sudoers_file() -> PathBuf {
     if !path.exists() {
         path.set_file_name("sudoers");
     };
+    if !path.exists() {
+        path = PathBuf::from("/usr/share/defaults/sudo/sudoers");
+    };
 
     dev_info!("Running with {} file", path.display());
     path
diff --git a/src/visudo/mod.rs b/src/visudo/mod.rs
index 9a8af96c..381bd32a 100644
--- a/src/visudo/mod.rs
+++ b/src/visudo/mod.rs
@@ -81,7 +81,7 @@ pub fn main() {
 fn check(file_arg: Option<&str>, perms: bool, owner: bool) -> io::Result<()> {
     let sudoers_path = &file_arg
         .map(PathBuf::from)
-        .unwrap_or_else(candidate_sudoers_file);
+        .unwrap_or_else(|| PathBuf::from("/etc/sudoers.d/visudo"));
 
     let sudoers_file = File::open(sudoers_path)
         .map_err(|err| io_msg!(err, "unable to open {}", sudoers_path.display()))?;
@@ -140,7 +140,7 @@ fn check(file_arg: Option<&str>, perms: bool, owner: bool) -> io::Result<()> {
 fn run(file_arg: Option<&str>, perms: bool, owner: bool) -> io::Result<()> {
     let sudoers_path = &file_arg
         .map(PathBuf::from)
-        .unwrap_or_else(candidate_sudoers_file);
+        .unwrap_or_else(|| PathBuf::from("/etc/sudoers.d/visudo"));
 
     let (sudoers_file, existed) = if sudoers_path.exists() {
         let file = File::options()
