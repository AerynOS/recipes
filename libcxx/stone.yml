name        : libcxx
version     : 14.0.6
release     : 2
summary     : LLVM's libcxx
license     :
    - Apache-2.0 WITH LLVM-exception
    - NCSA
homepage    : https://www.llvm.org
description : |
    LLVM's libcxx
upstreams   :
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.6/llvm-project-14.0.6.src.tar.xz: 8b3cfd7bc695bd6cea0f37f53f0981f34f87496e79e2529874fd03a2f9dd3a8a
builddeps   :
    - binary(python3)
    - pkgconfig(libxcrypt)
    - gcc-32bit-devel
environment : |
    if [ -z "%(libsuffix)" ]; then
        BIT32=OFF
        BIT64=ON
    else
        BIT32=ON
        BIT64=OFF
    fi

    # This is a bit hacky till there's an export for all build stages
    export llvmopts="
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_DEFAULT_TARGET_TRIPLE=%(build_platform) \
        -DLLVM_ENABLE_RUNTIMES='libcxx;libcxxabi;libunwind' \
        -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=OFF \
        -DLLVM_LIBDIR_SUFFIX=%(libsuffix) \
        -DLLVM_USE_SANITIZER=OFF \
        -DLLVM_INCLUDE_TESTS=ON \
        -DLLVM_LIBGCC_EXPLICIT_OPT_IN=ON \
        -DCOMPILER_RT_USE_LIBCXX=ON \
        -DLIBCXX_ENABLE_ASSERTIONS=OFF \
        -DLIBCXX_ENABLE_PARALLEL_ALGORITHMS=OFF \
        -DLIBCXX_ENABLE_SHARED=ON \
        -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
        -DLIBCXX_ENABLE_STATIC=OFF \
        -DLIBCXX_HAS_ATOMIC_LIB=ON \
        -DLIBCXX_INSTALL_SUPPORT_HEADERS=ON \
        -DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
        -DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
        -DLIBCXX_USE_COMPILER_RT=ON \
        -DLIBCXXABI_ENABLE_SHARED=OFF \
        -DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
        -DLIBCXXABI_INSTALL_LIBRARY=OFF \
        -DLIBCXXABI_USE_COMPILER_RT=ON \
        -DLIBCXXABI_USE_LLVM_UNWINDER=ON \
        -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=OFF \
        -DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY=OFF \
        -DLIBUNWIND_INSTALL_HEADERS=ON \
        -DLIBUNWIND_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_ENABLE_SHARED=ON \
        -DLIBUNWIND_ENABLE_STATIC=OFF \
        -DLIBUNWIND_INSTALL_LIBRARY=ON \
        -DLIBUNWIND_USE_COMPILER_RT=ON \
    "
setup      : |
    %patch %(pkgdir)/llvm-libgcc.patch

    %cmake ${llvmopts} -S runtimes \
        -DLLVM_LINK_LLVM_DYLIB=ON
build       : |
    %cmake_build cxx cxxabi unwind
install     : |
    DESTDIR="%(installroot)" %cmake_build install-cxx install-unwind

    # Set some support symlinks
    echo "INPUT(libc++.so.1)" > "%(installroot)/usr/lib%(libsuffix)/libc++abi.so"
    ln -svf libc++.so.1 "%(installroot)/usr/lib%(libsuffix)/libc++abi.so.1"
#workload    : |
#    %cmake_build check-runtimes -k 10000 ||:
emul32      : true
