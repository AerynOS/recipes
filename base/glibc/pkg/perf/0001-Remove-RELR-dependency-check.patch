From 572ae01ed2b0e069738a2ef5aa4f68a264735c86 Mon Sep 17 00:00:00 2001
From: Peter O'Connor <sunnyflunk@serpentos.com>
Date: Thu, 5 May 2022 05:20:52 +0300
Subject: [PATCH] Remove RELR dependency check

Signed-off-by: Peter O'Connor <sunnyflunk@serpentos.com>
---
 elf/dl-version.c | 24 ------------------------
 1 file changed, 24 deletions(-)

diff --git a/elf/dl-version.c b/elf/dl-version.c
index cda08892..d7d1fdcc 100644
--- a/elf/dl-version.c
+++ b/elf/dl-version.c
@@ -359,30 +359,6 @@ _dl_check_map_versions (struct link_map *map, int verbose, int trace_mode)
 	}
     }
 
-  /* When there is a DT_VERNEED entry with libc.so on DT_NEEDED, issue
-     an error if there is a DT_RELR entry without GLIBC_ABI_DT_RELR
-     dependency.  */
-  if (dyn != NULL
-      && map->l_info[DT_NEEDED] != NULL
-      && map->l_info[DT_RELR] != NULL
-      && __glibc_unlikely (!map->l_dt_relr_ref))
-    {
-      const char *strtab = (const void *) D_PTR (map, l_info[DT_STRTAB]);
-      const ElfW(Dyn) *d;
-      for (d = map->l_ld; d->d_tag != DT_NULL; ++d)
-	if (d->d_tag == DT_NEEDED)
-	  {
-	    const char *name = strtab + d->d_un.d_val;
-	    if (strncmp (name, "libc.so.", 8) == 0)
-	      {
-		_dl_exception_create
-		  (&exception, DSO_FILENAME (map->l_name),
-		   N_("DT_RELR without GLIBC_ABI_DT_RELR dependency"));
-		goto call_error;
-	      }
-	  }
-    }
-
   return result;
 }
 
-- 
2.35.1

