#
# SPDX-FileCopyrightText: Â© 2020-2024 Serpent OS Developers
#
# SPDX-License-Identifier: MPL-2.0
#
name        : firefox
version     : 139.0.4
release     : 28
homepage    : https://www.mozilla.org/
upstreams   :
    - https://ftp.mozilla.org/pub/firefox/releases/139.0.4/source/firefox-139.0.4.source.tar.xz:
        hash: 535e053fc3f949c6d7dd78a0a0b4997e5e26db7ef1e11d51b2b9a9f4022287f5
        unpackdir: firefox
    - https://sources.getsol.us/mozilla/firefox/firefox-139.0.4-langpacks.tar.zst:
        hash: 5b251595211ad5af6fdc24bb8b3fb5efa2ecdc7f052ae5855df8c9c9337dfa32
        unpackdir: firefox/langpacks
summary     : Firefox web browser
description : |
    Firefox web browser
license     : MPL-2.0
builddeps   :
    - binary(cbindgen)
    - binary(dbus-run-session) # PGO
    - binary(m4)
    - binary(make)
    - binary(nasm)
    - binary(node)
    - binary(python3)
    - binary(rustc)
    - binary(unzip)
    - binary(weston) # PGO
    - binary(wlheadless-run) # PGO
    - pkgconfig(alsa)
    - pkgconfig(gbm)
    - pkgconfig(gtk+-3.0)
    - pkgconfig(icu-uc)
    - pkgconfig(libdrm)
    - pkgconfig(libevent)
    - pkgconfig(libjpeg)
    - pkgconfig(libpipewire-0.3)
    # - pkgconfig(libpng) # Not patched with APNG support
    - pkgconfig(libpulse)
    - pkgconfig(libwebp)
    - pkgconfig(nspr)
    - pkgconfig(nss)
    - pkgconfig(pango)
    - pkgconfig(pixman-1)
    - pkgconfig(vpx)
    - pkgconfig(xkbcommon)
    - libstdc++-devel
rundeps     :
    - ffmpeg # dlopen()s libavcodec
    - xdg-desktop-portal
networking  : true # PGO
environment : |
    # Set this to 1 if you want to create a release build, 0 if you're just doing builds locally for testing purposes
    # Note that you still need to do a full release build locally and test it before pushing it
    FULL_BUILD=1

    export MOZ_NOSPAM=1
    export PIP_NETWORK_INSTALL_RESTRICTED_VIRTUALENVS=mach
    export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE="none"
    export MOZ_BUILD_DATE="$(date -u${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH} +%%Y%%m%%d%%H%%M%%S)"
setup       : |
    # Looks like this causes build hangs because it disables the watchdog...
    # %%patch %(pkgdir)/patches/pgo.patch
    %patch %(pkgdir)/patches/0001-Fix-Firefox-Thunderbird-envvar-conflicts.patch
    %patch %(pkgdir)/patches/libcxx18.patch
    %patch %(pkgdir)/patches/icu76.patch

    cp %(pkgdir)/build/mozconfig .
    sed -e 's|@@JOBCOUNT@@|%(jobs)|' -e 's|@@LIBDIR@@|%(libdir)|' -i mozconfig

    if [ $FULL_BUILD -ne 0 ]; then
        # PGO build, no LTO
        echo "ac_add_options --enable-profile-generate=cross" >> mozconfig
    else
        # Might as well do it with LTO
        echo "ac_add_options MOZ_LTO=cross,full" >> mozconfig
        echo "ac_add_options --enable-lto=cross,full" >> mozconfig
    fi

    ./mach configure
build       : |
    ./mach build
    if [ $FULL_BUILD -ne 0 ]; then
        ./mach package

        # PGO
        # Much of this taken from https://github.com/chaotic-aur/packages/blob/main/firefox-nightly/PKGBUILD
        env \
            LLVM_PROFDATA=llvm-profdata \
            JARLOG_FILE="${PWD}/jarlog" \
            XDG_RUNTIME_DIR="$(mktemp -p $(pwd) -d xdg-runtime-XXXXXX)" \
            LIBGL_ALWAYS_SOFTWARE=true \
            MOZ_DISABLE_CONTENT_SANDBOX=1 \
            MOZ_DISABLE_GMP_SANDBOX=1 \
            MOZ_DISABLE_GPU_SANDBOX=1 \
            MOZ_DISABLE_RDD_SANDBOX=1 \
            MOZ_DISABLE_SOCKET_PROCESS_SANDBOX=1 \
            MOZ_DISABLE_UTILITY_SANDBOX=1 \
            MOZ_DISABLE_VR_SANDBOX=1 \
            GTK_A11Y=none \
            NO_AT_BRIDGE=1 \
            MOZ_REMOTE_SETTINGS_DEVTOOLS=1 \
        dbus-run-session \
            wlheadless-run \
                -c weston --width=1920 --height=1080 \
                -- ./mach python build/pgo/profileserver.py

        # Make sure PGO data is present
        stat -c "Profile data found (%%s bytes)" merged.profdata
        test -s merged.profdata
        stat -c "Jar log found (%%s bytes)" jarlog
        test -s jarlog

        # Delete instrumented browser
        ./mach clobber objdir

        # Reset mozconfig
        rm mozconfig && cp %(pkgdir)/build/mozconfig .
        sed -e 's|@@JOBCOUNT@@|%(jobs)|' -e 's|@@LIBDIR@@|%(libdir)|' -i mozconfig

        # Enable LTO
        echo "ac_add_options MOZ_LTO=cross,full" >> mozconfig
        echo "ac_add_options --enable-lto=cross,full" >> mozconfig

        # PGO
        echo "ac_add_options --enable-profile-use=cross" >> mozconfig
        echo "ac_add_options --with-pgo-profile-path=${PWD}/merged.profdata" >> mozconfig
        echo "ac_add_options --with-pgo-jarlog=${PWD}/jarlog" >> mozconfig

        ./mach build
    fi
install     : |
    DESTDIR=%(installroot) ./mach install

    # Install locales
    langpackdir="%(installroot)/%(libdir)/firefox/langpacks"
    %install_dir "${langpackdir}"

    for i in langpacks/*.xpi; do
        lname="$(basename ${i})"
        %install_file "langpacks/${lname}" "${langpackdir}/${lname}"
    done

    for i in 16 32 48 64 128; do
        %install_dir %(installroot)/%(datadir)/icons/hicolor/${i}x${i}/apps
        ln -srv %(installroot)/%(libdir)/firefox/browser/chrome/icons/default/default${i}.png %(installroot)/%(datadir)/icons/hicolor/${i}x${i}/apps/org.mozilla.firefox.png
    done

    %install_file %(pkgdir)/install/firefox-symbolic.svg %(installroot)%(datadir)/icons/hicolor/symbolic/apps/firefox-symbolic.svg
    %install_file %(pkgdir)/install/org.mozilla.firefox.desktop %(installroot)%(datadir)/applications/org.mozilla.firefox.desktop

    %install_file %(pkgdir)/install/distribution.ini %(installroot)%(libdir)/firefox/distribution/distribution.ini
    %install_file %(pkgdir)/install/prefs.js %(installroot)/%(libdir)/firefox/defaults/pref/prefs.js
    %install_file %(pkgdir)/install/firefox-l10n.js %(installroot)/%(libdir)/firefox/defaults/pref/firefox-l10n.js

    # gnome search provider
    %install_file %(pkgdir)/install/org.mozilla.firefox.SearchProvider.service %(installroot)/usr/share/dbus-1/services/org.mozilla.firefox.SearchProvider.service
    %install_file %(pkgdir)/install/org.mozilla.firefox.search-provider.ini %(installroot)/usr/share/gnome-shell/search-providers/org.mozilla.firefox.search-provider.ini

    # Use a wrapper script to configure langpacks
    rm -v %(installroot)/%(bindir)/firefox
    install -D -m 00755 %(pkgdir)/install/firefox-wrapper.sh %(installroot)/%(bindir)/firefox
tuning      :
    - lto: false # Controlled by the build
