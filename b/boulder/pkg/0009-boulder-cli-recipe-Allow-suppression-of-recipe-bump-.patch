From 47f91498126b4ab2f2174dbb1b939f0d0434f0e9 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@serpentos.com>
Date: Thu, 5 Dec 2024 10:37:55 +0000
Subject: [PATCH 09/10] boulder/cli/recipe: Allow suppression of recipe bump in
 updates

This is hella useful if you're ammending a PR where you forgot
to alter the source, or need to refresh an existing PR when a new
version came out.

Signed-off-by: Ikey Doherty <ikey@serpentos.com>
---
 boulder/src/cli/recipe.rs | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/boulder/src/cli/recipe.rs b/boulder/src/cli/recipe.rs
index a950de5..4ff80af 100644
--- a/boulder/src/cli/recipe.rs
+++ b/boulder/src/cli/recipe.rs
@@ -86,6 +86,8 @@ pub enum Subcommand {
             help = "Overwrite the recipe file in place instead of printing to standard output"
         )]
         overwrite: bool,
+        #[arg(long, default_value = "false", help = "Don't increment the release number")]
+        no_bump: bool,
     },
     #[command(about = "Print macro definitions")]
     Macros {
@@ -116,7 +118,8 @@ pub fn handle(command: Command, env: Env) -> Result<(), Error> {
             overwrite,
             version,
             upstreams,
-        } => update(recipe, overwrite, version, upstreams),
+            no_bump,
+        } => update(recipe, overwrite, version, upstreams, no_bump),
         Subcommand::Macros { _macro } => macros(_macro, env),
     }
 }
@@ -163,7 +166,13 @@ fn new(output: PathBuf, upstreams: Vec<Url>) -> Result<(), Error> {
     Ok(())
 }
 
-fn update(recipe: Option<PathBuf>, overwrite: bool, version: String, upstreams: Vec<Upstream>) -> Result<(), Error> {
+fn update(
+    recipe: Option<PathBuf>,
+    overwrite: bool,
+    version: String,
+    upstreams: Vec<Upstream>,
+    no_bump: bool,
+) -> Result<(), Error> {
     if overwrite && recipe.is_none() {
         return Err(Error::OverwriteRecipeRequired);
     }
@@ -191,7 +200,10 @@ fn update(recipe: Option<PathBuf>, overwrite: bool, version: String, upstreams:
         GitUpstream(usize, serde_yaml::Value, String),
     }
 
-    let mut updates = vec![Update::Version(version), Update::Release(parsed.source.release + 1)];
+    let mut updates = vec![Update::Version(version)];
+    if !no_bump {
+        updates.push(Update::Release(parsed.source.release + 1));
+    }
 
     for (i, (original, update)) in parsed.upstreams.iter().zip(upstreams).enumerate() {
         match (original, update) {
-- 
2.47.1

