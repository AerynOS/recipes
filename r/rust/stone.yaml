#
# SPDX-FileCopyrightText: Â© 2020-2024 Serpent OS Developers
#
# SPDX-License-Identifier: MPL-2.0
#
name        : rust
version     : 1.81.0
release     : 8
homepage    : https://www.rust-lang.org/
upstreams   :
    - https://static.rust-lang.org/dist/rustc-1.81.0-src.tar.xz : 36217ef7e32f40a180e3d79bd666b4dfdaed49dd381023a5fb765fd12d0092ce
summary     : Rust programming language compiler + tools
description : |
    Rust programming language compiler + tools
license     :
    - Apache-2.0
    - BSL-1.0
    - CC-BY-4.0
    - CC-BY-NC-SA-3.0
    - CC0-1.0
    - GCC-exception-3.1
    - GPL-2.0-or-later
    - GPL-3.0-or-later
    - MIT
    - Zlib
# networking  : true
builddeps   :
    - binary(FileCheck)
    - binary(cargo)
    - binary(cc)
    - binary(cmake)
    - binary(llvm-config)
    - binary(ln)
    - binary(ninja)
    - binary(python)
    - binary(strip)
    - binary(which)
    - pkgconfig32(libunwind)
    - pkgconfig(libffi)
    - pkgconfig(libxml-2.0)
    - pkgconfig(ncurses)
    - pkgconfig(openssl)
    - pkgconfig(sqlite3)
    - pkgconfig(zlib)
    - gcc-32bit-devel
    - glibc-32bit-devel
rundeps     :
    - binary(cc)
environment : |
    # Don't set these here, all configuration should come from config.toml or the package.yml
    unset RUSTFLAGS

    # Force libsqlite3-sys to use the system deps
    export LIBSQLITE3_SYS_USE_PKG_CONFIG=1
setup       : |
    sed -e 's|@@LTO@@|thin-local|g' %(pkgdir)/config.toml.in > config.toml.pgo

    sed -e 's|@@LTO@@|fat|g' %(pkgdir)/config.toml.in > config.toml.release

    # Ensure that we use the system sqlite3
    %patch %(pkgdir)/0001-unbundle-sqlite.patch -d src/tools/cargo
    find ./vendor/libsqlite3-sys*/sqlite3/ -mindepth 1 -delete -print

    # TODO package libgit2 and libssh2

    # Fix bootstrap checking checksums for all the files we just deleted
    find vendor -name .cargo-checksum.json -print \
        -exec sed -i.uncheck -e 's/"files":{[^}]*}/"files":{ }/' '{}' '+'
build       : |
    python ./x.py build \
            --build-dir %(workdir)/build-pgo \
            --config config.toml.pgo \
            --jobs %(jobs) \
            --rust-profile-generate %(workdir)/rustc-pgo-profile-data \
            --stage 2

    llvm-profdata merge -output=%(workdir)/rustc-pgo-profile-data/rustc-pgo.profdata %(workdir)/rustc-pgo-profile-data/default_*.profraw

    DESTDIR=%(installroot) python3 x.py install \
            --build-dir %(workdir)/build-release \
            --config config.toml.release \
            --jobs %(jobs) \
            --rust-profile-use %(workdir)/rustc-pgo-profile-data/rustc-pgo.profdata
install     : |
    install -Dm00644 %(installroot)/etc/bash_completion.d/* -t %(installroot)/usr/share/bash-completion/completions
    rm -rvf %(installroot)/etc

    # Remove text files from libs (manifests, installation logs...)
    find %(installroot)/%(libdir)/rustlib -maxdepth 1 -type f -delete -print
packages    :
    - "%(name)":
        paths:
            - /usr/lib/lib*.so
            - /usr/lib/rustlib/x86_64-unknown-linux-gnu

    - "%(name)-32bit":
        paths:
            - /usr/lib/rustlib/i686-unknown-linux-gnu
        rundeps:
            - "%(name)"

    - "%(name)-devel":
        paths:
            - /usr/bin/cargo-clippy
            - /usr/bin/cargo-fmt
            - /usr/bin/clippy-driver
            - /usr/bin/rust-analyzer
            - /usr/bin/rust-demangler
            - /usr/bin/rust-gdb*
            - /usr/bin/rust-lldb
            - /usr/bin/rustfmt
            - /usr/lib/rustlib/etc/
            - /usr/lib/rustlib/src/
            - /usr/libexec/rust-analyzer-proc-macro-srv

    - "%(name)-docs":
        paths:
            - /usr/share/doc
